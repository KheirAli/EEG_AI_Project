function Features1 = feature_extractor1(DATA,DATA_len,Fs,channel_len,time_axes)

% p_index = find(TrainLabel == 2);
% n_index = find(TrainLabel == 1);

w = linspace(0, Fs/2 - 1, time_axes /2)'; % 0 - pi
Features1 = zeros(1 ,DATA_len) ;

for i = 1:DATA_len
    A = DATA(:,:,i);
    % variance of all channels
	feature_idx = 1;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
    Features1(idx_min:idx_max, i) = var(A, [], 2); 
    
    % Form Factor for all channels
	feature_idx = 2;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
    diff_A = diff(A, 1, 2); 
    diff2_A = diff(A, 2, 2);
    Features1(idx_min:idx_max, i) = std(A, [], 2).* std(diff2_A, [], 2)./ std(diff_A, [], 2).^2; 
    
    % argmax of the maximum frequency
	feature_idx = 3;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
    A_fft = abs(fft(A, time_axes, 2));
    [max_eng, max_freq_ind] = max(A_fft(:,1:channel_len/2), [], 2);
    Features1(idx_min:idx_max, i) = max_freq_ind ; 
    
    % mean frequency
	feature_idx = 4;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
    mean_Freq = A_fft(:,1:time_axes/2)*w/sum(w);
    Features1(idx_min:idx_max, i) = mean_Freq;  
    
    % median frequency #ok
	feature_idx = 5;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
    Features1(idx_min:idx_max, i) = medfreq(A',Fs);
    
    % relative energy of frequency bands #ok
	A_fft2 = abs(fft(A, Fs, 2));
    total_energy = sum((A_fft2(:, 2:Fs)).^2, 2);
    delta = sum((A_fft2(:, 2:7).^2), 2)./total_energy;
	feature_idx = 6;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
	Features1(idx_min:idx_max, i) = delta;
    alphai = sum((A_fft2(:, 8:25).^2), 2)./total_energy;
	feature_idx = 7;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
	Features1(idx_min:idx_max, i) = alphai;
    beta1 = sum( (A_fft2(:, 26:32)).^2, 2)./total_energy;
	feature_idx = 8;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
	Features1(idx_min:idx_max, i) = beta1;
    beta2 = sum( (A_fft2(:, 31:62)).^2, 2 )./total_energy;
	feature_idx = 9;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
	Features1(idx_min:idx_max, i) = beta2;
    gamma1 = sum( (A_fft2(:, 63:100)).^2, 2 )./total_energy;
	feature_idx = 10;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
	Features1(idx_min:idx_max, i) = gamma1;
    gamma2 = sum( (A_fft2(:, 100:26)).^2, 2 )./total_energy;
	feature_idx = 11;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
	Features1(idx_min:idx_max, i) = gamma2;
    gamma3 = sum( (A_fft2(:, 45:51)).^2, 2 )./total_energy;
	feature_idx = 12;
	idx_min = (feature_idx-1)*channel_len+1;
	idx_max = (feature_idx)*channel_len;
    Features1(idx_min:idx_max, i) = gamma3;
    % histogram
% % %     xbin = linspace(-15, 15, 11);
% % %     
% % %     for j = 1:channel_len
% % %         Features1(337 + (j-1)*11 : 347 + (j-1)*11, i) = hist(A(j, :), xbin)';
% % %     end

%CSP

%     TrainData_zero_mean = zeros(size(DATA));
%     for j = 1:DATA_len
%         TrainData_zero_mean(:, :, j) = DATA(:, :, j) - mean(DATA(:, :, j)); 
%     end
%     C0 = zeros(channel_len, channel_len);
%     C1 = zeros(channel_len, channel_len);
%     for j = p_index
%         s = DATA(:, :, j);
%         C1 = C1 + s*s'/trace(s*s');
%     end
%     for j = n_index
%         s = DATA(:, :, j);
%         C0 = C0 + s*s'/trace(s*s');
%     end
%     [V, D] = eig(C1, C0);
%     [~, index] = sort(diag(D), "descend");
%     V = V(:, index);
%     F = 14;
%     W_CSP = [V(:, 1:F), V(:, end-F+1:end)];
%     
%     X_CSP = zeros(DATA_len, 2*F);
%     for j = 1:DATA_len
%         s = DATA(:, :, j);
%         Y = W_CSP'*s;
%         X_CSP(j, :) = var(Y, [], 2)';
%         
%     end
%     Features1(337:337+2*F,:) = X_CSP';

    tt = 308;
    idx_min = 645-tt;
	idx_max = idx_min + channel_len - 1;
    Features1(idx_min:idx_max, i) = max_eng;
    
	%  pwelch psd energy
    for j = 1:channel_len
       t = abs(pwelch(A(j,:)));
       [~,ind_max] = max(t);
        total_energy = sum(t(43:86, :), 1);
        delta = sum((t([61:63, 66:68], :)).^2, 1)./total_energy;
        alpha = sum((t([58:60, 69:71], :)).^2, 1)./total_energy;
        beta1 = sum((t([55:57, 72:74], :)).^2, 1)./total_energy;
        beta2 = sum((t([52:54, 75:77], :)).^2, 1)./total_energy;
        gamma1 = sum((t([49:51, 78:80], :)).^2, 1)./total_energy;
        gamma2 = sum((t([46:48, 81:83], :)).^2, 1)./total_energy;
        gamma3 = sum((t([43:45, 84:86], :)).^2, 1)./total_energy;
       
        Features1(673-tt + (j-1)*45/5 : 672-tt + j*45/5, i) = [ind_max, total_energy,...
            delta, alpha, beta1, beta2, gamma1, gamma2, gamma3]';    
    end
    % asymetric index 
    h = 926-tt;
    alphai = log(alphai);
    for j = 1 : channel_len
        for k = j+1 : channel_len
            h = h + 1;
            Features1(h, i) = alphai(j)-alphai(k);
            
        end
    end
    
    % bandpower features
    y6 = 1305-tt;
    for j = 1:channel_len
       Features1(y6, i) = bandpower(A(j,:), Fs, [2 8]);
       Features1(y6+1, i) = bandpower(A(j,:), Fs, [9 15]);
       Features1(y6+2, i) = bandpower(A(j,:), Fs, [16 22]);
       Features1(y6+3, i) = bandpower(A(j,:), Fs, [23 29]);
       Features1(y6+4, i) = bandpower(A(j,:), Fs, [30 36]);
       Features1(y6+5, i) = bandpower(A(j,:), Fs, [37 43]);
       Features1(y6+6, i) = bandpower(A(j,:), Fs, [44 50]);
       
       y6 = y6 + 7;
    end
    y7 =1501-tt;
    for j = 1:channel_len
        tmp1 = arburg(A(j,:), 5);
        Features1(y7:y7+3,i) = tmp1(2:5)';
        y7 = y7 + 4;
    end
    y8 = 1613-tt;
    for j = 1:channel_len
        Features1(y8:y8+channel_len-1) = kurtosis(A, [], 2);
    end
    %correlation
    y9 = 1644-tt;
    for j = 1 : channel_len
        for k = j+1 : channel_len
            y9 = y9 + 1;
            Features1(y9, i) = corr(A_fft(j,:)',A_fft(k,:)'); 
        end
    end
end
end

